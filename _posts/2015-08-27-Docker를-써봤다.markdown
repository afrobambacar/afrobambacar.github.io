---
layout: post
title:  "Docker를 써봤다."
date:   2015-08-27
---

# docker를 써봤다.

git이 소스에 대한 버전관리라면, docker는 서버 환경에 대한 버전관리라고 보면 쉽겠다. 거기에 한가지 덧붙이자면 애플리케이션도 태울 수가 있다는 것. 새로운 서버에 애플리케이션을 올리려고 하면 애플리케이션이 돌아가기 위한 디펜던시 설치부터 설정까지 해야할 일들이 더러 있는데, 미리 정의한 docker 이미지를 이용하여 OS만 덜렁 설치된 새로운 서버에 컨테이너를 올릴 수 있다는 것이다. 그리고 애플리케이션을 동작시키면 끝. 

시험해보진 않았지만 node.js 애플리케이션을 배포할 때 docker를 이용한다고 하면 dockerfile을 다음과 같이 설정할 수 있을 것 같다. 

* 우분투 이미지 복사
* nginx, nodejs 설치
* 특정 디렉토리에 애플리케이션 설치
* npm install
* nginx 설정
* app.js 실행

# docker 명령어들

일단 docker의 명령어는 Git 혹은 리눅스 명령어와 비슷해서 크게 어려운 건 없었다.

* docker images (로컬에 있는 이미지 보기)
* docker ps -l (현재 실행중인 컨테이너 보기)
* docker run IMAGE_NAME (이미지로 부터 컨테이너 만들기)
* docker pull REPOSITORY (로컬에 이미지 받기)
* docker build -t docker-whale . (현재 위치의 Dockerfile 빌드: 이미지 만들기)
* docker tag IMAGE_ID REPOSITORY:version or label (이미지 태그 붙이기)
* docker push REPOSITORY_NAME (docker hub에 이미지 푸쉬하기)
* docker rmi IMAGE_NAME (이미지 지우기)
* docker rm CONTAINER_ID (컨테이너 지우기)


